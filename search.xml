<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>记录第一次飞行</title>
      <link href="/2022/10/30/%E8%AE%B0%E5%BD%95%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%A3%9E%E8%A1%8C/"/>
      <url>/2022/10/30/%E8%AE%B0%E5%BD%95%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%A3%9E%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h1>记录第一次飞行✈️</h1><h5 id="‼️-只是做一下个人纪念留存，不具其他意义，嘿嘿"><a class="header-anchor" href="#‼️-只是做一下个人纪念留存，不具其他意义，嘿嘿"></a>‼️ 只是做一下个人纪念留存，不具其他意义，嘿嘿~~</h5><h2 id="原因-😝"><a class="header-anchor" href="#原因-😝"></a>原因:😝</h2><p>学业原因，必须由四川去上海。可供选择的交通工具，实际上就两个： 飞机or高铁。高铁需要坐17H，那确实接受不了，所以选择飞机是最合适的🛩️</p><h2 id="出发：👣"><a class="header-anchor" href="#出发：👣"></a>出发：👣</h2><p>本次出行选择的重庆江北机场作为起点，没有啥特别的就机票便宜。不过说实在的还是有点怕东航的波音738😭。但是为了节约钱，东航还是比较具有性价比的。</p><p><em>插曲：机票是真的可以一分钟刷新一次价格的，所以，能早买还是尽量早点买吧。拖到后边，好的航班没了，而且剩下的航班价格也会上涨。</em></p><h3 id="多图警告：✨"><a class="header-anchor" href="#多图警告：✨"></a>多图警告：✨</h3><p><img src="https://s2.loli.net/2022/10/30/nKoLYX8WUmzGhit.jpg" alt="微信图片_20221030204744.jpg"></p><p><strong>进入机场航站楼，一定提前一个半小时多去值机，选座，托运。个人喜欢选择靠近窗户的位置，不然全程就只能睡觉了，然后提前一个小时左右进去安检，可能会排很长的队伍😔。</strong></p><p><img src="https://s2.loli.net/2022/10/30/4MYSNan5bosGkXe.jpg" alt="微信图片_20221030203500.jpg"></p><p><strong>得到机票了，嘿嘿，第一张机票！！！</strong> 😉</p><p><img src="https://s2.loli.net/2022/10/30/zBrcNsbwmoJXSuh.jpg" alt="微信图片_20221030203506.jpg"></p><p><strong>起飞，穿越云层！😆</strong></p><p><img src="https://s2.loli.net/2022/10/30/951LC8ErJ7vZYqd.jpg" alt="微信图片_20221030203511.jpg"></p><p><img src="https://s2.loli.net/2022/10/30/c9WzUkDhxejvp3a.jpg" alt="微信图片_20221030203517.jpg"></p><p><strong>平稳了，下面就全是云海 ☁️</strong></p><p><img src="https://s2.loli.net/2022/10/30/1LrDB78ytE2bT5u.jpg" alt="微信图片_20221030203455.jpg"></p><p><strong>一边吃机上的小食，一别看电影（提前下好的），一边看窗外景色也还是不错的😁</strong></p><p><img src="https://s2.loli.net/2022/10/30/wQVsYBclrCL2MzX.jpg" alt="微信图片_20221030203449.jpg"></p><p><strong>我提前在手机上下载了离线地图，上飞机后打开GPS就可以实时看到自己大概到哪了。例如我的这个航班，到无锡左右飞机就会慢慢开始下高度了，感觉还不错</strong></p><p><img src="https://s2.loli.net/2022/10/30/Uz8oPpIxl93L6bc.jpg" alt="微信图片_20221030203443.jpg"></p><p><strong>这高度是直接通过卫星定位测算的，高度还没有珠穆朗玛峰高😂</strong></p><p><img src="https://s2.loli.net/2022/10/30/mBnJ3ErxULNt7c4.jpg" alt="微信图片_20221030203438.jpg"></p><p><strong>安全着陆😆</strong></p><p><img src="https://s2.loli.net/2022/10/30/NFj1iqXBzQvmlE6.jpg" alt="微信图片_20221030203522.jpg"></p><p><strong>低空景色可还行</strong></p><p><img src="https://s2.loli.net/2022/10/30/SVoxDtT5ObZ8yP6.jpg" alt="微信图片_20221030204755.jpg"></p><p><strong>机场的大飞机</strong></p><h3 id="附：学校夜景与晨景："><a class="header-anchor" href="#附：学校夜景与晨景："></a>附：学校夜景与晨景：</h3><p><img src="https://s2.loli.net/2022/10/30/OhbDSzg3uLNoE4P.jpg" alt="微信图片_20221030203427.jpg"><br><img src="https://s2.loli.net/2022/10/30/DUqagEFksVy6Kdz.jpg" alt="微信图片_20221030203353.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> 生活小事 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生活 </tag>
            
            <tag> 随便记录 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Armbian玩客云——从开始到结束</title>
      <link href="/2022/10/27/Armbian%E7%8E%A9%E5%AE%A2%E4%BA%91%E2%80%94%E2%80%94%E4%BB%8E%E5%BC%80%E5%A7%8B%E5%88%B0%E7%BB%93%E6%9D%9F/"/>
      <url>/2022/10/27/Armbian%E7%8E%A9%E5%AE%A2%E4%BA%91%E2%80%94%E2%80%94%E4%BB%8E%E5%BC%80%E5%A7%8B%E5%88%B0%E7%BB%93%E6%9D%9F/</url>
      
        <content type="html"><![CDATA[<h1>Armbian玩客云——从开始到结束 ☁️</h1><h2 id="前言：（先说结论，现在的armbian玩客云狗都不买）"><a class="header-anchor" href="#前言：（先说结论，现在的armbian玩客云狗都不买）"></a>前言：（<strong>先说结论，现在的armbian玩客云狗都不买</strong>）</h2><p>之前的购买的云服务器快到期了，U1S1，云服务器首次购买还是不贵的，续费那就多少有点贵了<em>至少我没法承受</em>，因此，我就想着去淘个服务器嘛。首先想到的肯定是电脑主机（因为我的需求就是能运行一个基于wordpress的博客就可），弄个宝塔，再弄个wordpress，再随便弄个内网穿透。完美 😄! 实际情况是，一个服务器必须保持一直开机运行，所以不能选一个功耗过大的；老式的主机大多比较大，邮费比较贵，性价比不大高。几经搜寻，发现了Armbian玩客云这个“宝贝”，价格不贵，咸鱼二手50元包邮，大概长这样：</p><img src="https://s2.loli.net/2022/10/27/Au734vXYrStOhWb.jpg" alt="玩客云图片.jpg" style="zoom: 33%;" /><h2 id="1️⃣-SSH"><a class="header-anchor" href="#1️⃣-SSH"></a>1️⃣ SSH</h2><p>要想对玩客云发送命令就得现连上玩客云，然后需要进行SSH连接。首先将玩客云接入家庭网络后，输入网址栏输入192.168.1.1，登录路由器（默认账号密码在路由器背面），就可看到连接到局域网内所有设备的IP ,你所看到的设备名可能是一堆MAC地址，可以去百度下对应MAC地址是哪个厂商的，一个一个排除，剩下的就是玩客云了；如果能看到名字的话，那天的名字大概率就叫“arm”。下个SSH软件，推荐Xshell，操作比较简单。</p><ul><li><p>打开对话框，输入ssh +你的玩客云的IP</p><p><img src="https://s2.loli.net/2022/10/27/TshKVfEGompYeq2.png" alt="ssh.PNG"></p></li><li><p>输入玩客云root账号和密码（默认账号为root，密码为1234）</p></li><li><p>等待连接，成功后会显示你的系统，cpu温度以及一些其他设备信息</p></li></ul><h2 id="2️⃣-下载宝塔"><a class="header-anchor" href="#2️⃣-下载宝塔"></a>2️⃣ 下载宝塔</h2><p>玩客云的设备固件比较差，根本没法下载最新的宝塔，所以直接用宝塔官网的wiget下载是会安装失败的，具体代码在上一篇宝塔挂载U盘教程里面有，如果没法访问宝塔面板，那可以看看有没有打开8888端口，打开8888端口：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum install firewalld #安装firewall#</span><br><span class="line">firewall-cmd --add-port=8888/tcp --permanent#打开8888端口#</span><br><span class="line">firewall-cmd --reload#重新加载#</span><br><span class="line">firewall-cmd --query-port=8888/tcp#查询8888端口#</span><br></pre></td></tr></table></figure><a class="btn-beautify orange larger" href="https://bolog.becomingw.cn/2022/10/24/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%8C%82%E8%BD%BD%E5%88%B0U%E7%9B%98%EF%BC%88%E7%8E%A9%E5%AE%A2%E4%BA%91%EF%BC%89/"   title="宝塔教程"><i class="far fa-hand-point-right"></i><span>宝塔教程</span></a><p>tips：宝塔5.9所能安装的东西非常少，不能跑分，安装Nigix需要1h+,安装php–不能下载php（可能是我打开方式不对）😂，安装SQL，也是需要很久时间。</p><h2 id="3️⃣-安装wordpress-or其他博客框架"><a class="header-anchor" href="#3️⃣-安装wordpress-or其他博客框架"></a>3️⃣ 安装wordpress or其他博客框架</h2><p>不想多说啥，我曾经成功安装了一次PHP7.3，没用，照样报错打开网址就给你下个报错信息。我也试了其他博客框架，连配置要求最低的Z-bolog也不行——这个只能走到安装完成那一步，然后就和wordpress一样，返回错误信息。所以它只适合做一个没有PHP的纯静态网站, 算了算了，弃了。😢</p><h2 id="4️⃣-试着安装-python3-6-jupyter"><a class="header-anchor" href="#4️⃣-试着安装-python3-6-jupyter"></a>4️⃣ 试着安装 python3.6 +jupyter</h2><p>我后面做机器学习可能需要用到jupyter,安在电脑上有点麻烦要是能安装到服务器，想要使用时通过网址访问服务器来启动jupyter会很方便。</p><ul><li><p>armbian系统是自带python2.7的，但是做机器学习需要python3.x，因此需要重新安装新的python。安装方法参照这篇博客————（）</p></li><li><p>接下来是安装jupyter，参照下面这篇博客。结论：安装失败！</p><p><img src="https://s2.loli.net/2022/10/27/9tga1sPzZOpcLYB.png" alt="烂玩客云.PNG"></p></li></ul><h2 id="5️⃣-最终结论："><a class="header-anchor" href="#5️⃣-最终结论："></a>5️⃣ 最终结论：</h2><p>玩客云配置实在太低，已完全不适合用于搭建网站，可玩性实际上并没有想象那么大。50元对我来说约等于捡了个垃圾，当然，也可能是我等级太低了。呼吁各位别再去买armbian玩客云了，<s>纯纯垃圾</s>。😠</p>]]></content>
      
      
      <categories>
          
          <category> 随便玩玩 </category>
          
          <category> 玩客云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宝塔面板 </tag>
            
            <tag> 玩客云 </tag>
            
            <tag> jupyter </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>宝塔面板挂载到U盘（玩客云）</title>
      <link href="/2022/10/24/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%8C%82%E8%BD%BD%E5%88%B0U%E7%9B%98%EF%BC%88%E7%8E%A9%E5%AE%A2%E4%BA%91%EF%BC%89/"/>
      <url>/2022/10/24/%E5%AE%9D%E5%A1%94%E9%9D%A2%E6%9D%BF%E6%8C%82%E8%BD%BD%E5%88%B0U%E7%9B%98%EF%BC%88%E7%8E%A9%E5%AE%A2%E4%BA%91%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>宝塔面板挂载到U盘（玩客云）</h1><p>​前不久50元在🐟淘了个玩客云，之后有时间再介绍这东西，今天主要想记录下我挂载宝塔面板到U盘的过程😉</p><h2 id="⏪-前言："><a class="header-anchor" href="#⏪-前言："></a>⏪ 前言：</h2><p>玩客云作为主机只有8g的内部存储，如果安装宝塔到机身本来存储的话，随便部署点东西（或者安装点插件），内存就红了。第一反应我是删除某些没用的插件，结果还是杯水车薪 😔 。然后在CSDN上看到有人把硬盘挂载到玩客云上，我操作了一番，然后把网站部署到硬盘，然而结果也并没有变太好。然后寻找到了宝塔上的帖子，直接一不做二不休，先卸载宝塔，然后将U盘重新挂载，将宝塔安装到挂载的U盘。系统盘得到解放！:happy:</p><p><img src="https://s2.loli.net/2022/10/24/SaHTx67tWX9JA53.png" alt="bt_memory.PNG"></p><h2 id="1️⃣-基本准备："><a class="header-anchor" href="#1️⃣-基本准备："></a>1️⃣ 基本准备：</h2><p>无内容的U盘或者磁盘一个，插入已刷入Linux的玩客云主机，尽量插靠HDMI接口那个1口。然后玩客云接入家里的路由器。下个XSHELL到电脑，ssh到玩客云Linux系统。创建宝塔面板挂载目录/www：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /www</span><br></pre></td></tr></table></figure><h2 id="2️⃣-格式化U盘及分区："><a class="header-anchor" href="#2️⃣-格式化U盘及分区："></a>2️⃣ 格式化U盘及分区：</h2><p>这里U盘需要格式化，如果觉得代码格盘麻烦，可以将U盘插到电脑，下载Dsikgenius来进行格式化。U盘需格式化为ext4格式。也可以用Linux命令进行格盘：</p><ul><li><p>输入 fdisk -l 查看所有硬盘分区及硬盘名 <em>注意看最下面，Device boost start下方为你之前分区的盘的名字1，如我的是/dev/sda1</em></p><p><img src="https://s2.loli.net/2022/10/24/HXlGjSYrmkN8264.png" alt="bootstart.PNG"></p></li><li><p>输入以下代码对U盘进行格式化，其中/dev/sda为前面查看的U盘名</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda</span><br></pre></td></tr></table></figure><ul><li><p>然后等待格盘完成，格盘过程会出现如下代码：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mke2fs 1.44.5 (15-Dec-2018)</span><br><span class="line">/dev/sda contains a ext4 file system</span><br><span class="line">last mounted on /mnt/diskyingpan on Mon Oct 24 10:57:48 2022</span><br><span class="line">Proceed anyway? (y,N) y#(这里需要自己输入y确认)#</span><br><span class="line">Creating filesystem with 7680000 4k blocks and 1921360 inodes</span><br><span class="line">Filesystem UUID: 14349e61-9865-4863-8157-fa9373f76f58</span><br><span class="line">Superblock backups stored on blocks: </span><br><span class="line">32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, </span><br><span class="line">4096000</span><br><span class="line"></span><br><span class="line">Allocating group tables: done                            </span><br><span class="line">Writing inode tables: done                            </span><br><span class="line">Creating journal (32768 blocks): done</span><br><span class="line">Writing superblocks and filesystem accounting information: done #（这一步等待时间较长不要在这乱输入内容，等待即可）#  </span><br><span class="line">done</span><br></pre></td></tr></table></figure></li><li><p>然后输入 fh -l查看格盘结果：<em>注意看最下面的/dev/sda与/dev/mkblk0相比，/dev/sda后面代码没那么长</em></p><p><img src="https://s2.loli.net/2022/10/24/6tPzmElNiqIvCuD.png" alt="格盘结果.PNG"></p></li><li><p>确认格盘成功后开始进行分区，输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/sdb</span><br></pre></td></tr></table></figure></li><li><p>过程代码如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Welcome to fdisk (util-linux 2.33.1).</span><br><span class="line">Changes will remain in memory only, until you decide to write them.</span><br><span class="line">Be careful before using the write command.</span><br><span class="line"></span><br><span class="line">The old ext4 signature will be removed by a write command.</span><br><span class="line"></span><br><span class="line">Device does not contain a recognized partition table.</span><br><span class="line">Created a new DOS disklabel with disk identifier 0x37b2df98.</span><br><span class="line"></span><br><span class="line">Command (m for help): n#(这里输入n，继续)#</span><br><span class="line">Partition type</span><br><span class="line">   p   primary (0 primary, 0 extended, 4 free)</span><br><span class="line">   e   extended (container for logical partitions)</span><br><span class="line">Select (default p): p#（这里输入p继续）#</span><br><span class="line">Partition number (1-4, default 1): 1#（这里输入1继续）#</span><br><span class="line">First sector (2048-61439999, default 2048): #（不输入，直接回车）#</span><br><span class="line">Last sector, +/-sectors or +/-size&#123;K,M,G,T,P&#125; (2048-61439999, default 61439999): #（直接回车）#</span><br><span class="line"></span><br><span class="line">Created a new partition 1 of type &#x27;Linux&#x27; and of size 29.3 GiB.</span><br><span class="line"></span><br><span class="line">Command (m for help): wq #输入wq#</span><br><span class="line">The partition table has been altered.</span><br><span class="line">Calling ioctl() to re-read partition table.</span><br><span class="line">Syncing disks.</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>检查分区情况：fdisk -l</p></li><li><p>格式化分区：<em>已格式化的可跳过这步，不过还是建议再格一下,过程和前面格盘差不多，但是代码注意填入分区名即图里面的 /dev/sda1</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfs.ext4 /dev/sda1</span><br></pre></td></tr></table></figure></li></ul><h2 id="3️⃣挂载及下载宝塔面板："><a class="header-anchor" href="#3️⃣挂载及下载宝塔面板："></a>3️⃣挂载及下载宝塔面板：</h2><ul><li><p>将分区挂载信息添加到配置文件/etc/fstab中，实现开机/重启自动挂载：<em>注意分区名不要打错了，我这是 /dev/sda1</em></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;/dev/sda1 /www ext4 defaults 0 0&quot; &gt;&gt; /etc/fstab</span><br></pre></td></tr></table></figure></li><li><p>重新挂载所有分区：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount -a</span><br></pre></td></tr></table></figure></li><li><p>检查挂载是否成功：fh -l</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Filesystem      Size  Used Avail Use% Mounted on</span><br><span class="line">udev            459M     0  459M   0% /dev</span><br><span class="line">tmpfs            99M  4.4M   95M   5% /run</span><br><span class="line">/dev/mmcblk0p2  6.5G  4.9G  1.7G  75% /</span><br><span class="line">tmpfs           495M   52K  495M   1% /dev/shm</span><br><span class="line">tmpfs           5.0M     0  5.0M   0% /run/lock</span><br><span class="line">tmpfs           495M     0  495M   0% /sys/fs/cgroup</span><br><span class="line">tmpfs           495M   20K  495M   1% /tmp</span><br><span class="line">/dev/mmcblk0p1  488M   49M  440M  10% /boot</span><br><span class="line">armbian-ramlog   50M  1.8M   49M   4% /var/log</span><br><span class="line">tmpfs            99M     0   99M   0% /run/user/0</span><br><span class="line">/dev/sda1        29G   45M   28G   1% /www #当你的挂载盘后边挂载信息为 /www时说明成功了#</span><br></pre></td></tr></table></figure></li><li><p>输入以下代码开始安装宝塔面板：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install python-setuptools</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -O install.sh http://download.bt.cn/install/install.sh &amp;&amp; sh install.sh</span><br></pre></td></tr></table></figure><p><em>这里安装代码没有用宝塔面板的Debian推荐代码，我第一次使用官网的代码安装失败了，好像官网代码是安装最新的宝塔面板用的，但是玩客云推荐是宝塔5.9</em></p></li><li><p>后面他会问你是否立即安装宝塔到/www地址，输入y继续：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Do you want to install Bt-Panel to the /www directory now?(y/n): y#这里输入y继续#</span><br></pre></td></tr></table></figure></li></ul><h2 id="4️⃣-漫长安装等待后，记下登录账号密码，进入浏览器输入网址就可访问了😁"><a class="header-anchor" href="#4️⃣-漫长安装等待后，记下登录账号密码，进入浏览器输入网址就可访问了😁"></a>4️⃣ 漫长安装等待后，记下登录账号密码，进入浏览器输入网址就可访问了😁</h2>]]></content>
      
      
      <categories>
          
          <category> 随便玩玩 </category>
          
          <category> 玩客云 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 宝塔面板 </tag>
            
            <tag> 玩客云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Promoter预测</title>
      <link href="/2022/10/23/Promoter%E9%A2%84%E6%B5%8B/"/>
      <url>/2022/10/23/Promoter%E9%A2%84%E6%B5%8B/</url>
      
        <content type="html"><![CDATA[<h1>Promoter预测（基于Promoter2.0 and Galaxy PhagePromoter）</h1><h2 id="Promoter（启动子）简介：-swig￼0"><a class="header-anchor" href="#Promoter（启动子）简介：-swig￼0"></a>Promoter（启动子）简介： <svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-sousuo"></use></svg></h2><p>启动子是一段位于转录起始位点 5’ 端上游区的 DNA 序列，能活化 RNA 聚合酶，使之与模板<br>DNA 准确地结合并具有转录起始的特异性。转录起始位点（Transcription Start Site，TSS）是指与新<br>生 RNA 链第一个核苷酸相对应 DNA 链上的碱基，研究证实通常为一个嘌呤。常把起点前面、即<br>5’ 端的序列称为上游序列（upstream），而把其后面、即 3’ 端的序列称为下游序列（downstream）。<br>在描述碱基的位置时，一般用数字表示，起点为 +1, 下游方向依次为 +2,+3,⋯⋯，上游方向依次<br>为-1,-2,-3⋯⋯序列的书写方向通常是固定的，使转录从左（上游）向右（下游）进行，mRNA 同样<br>按照 5’→3’ 方向书写。[1]</p><p>维基百科：<a href="https://zh.wikipedia.org/zh-hans/%E5%95%9F%E5%8B%95%E5%AD%90">启动子</a></p><p>医学百科：<a href="http://www.wiki8.com/qidongzi_42774/">启动子</a></p><h2 id="promoter2-0介绍：-swig￼1"><a class="header-anchor" href="#promoter2-0介绍：-swig￼1"></a>promoter2.0介绍： <svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-sousuo"></use></svg></h2><p>从DNA序列预测真核PolII启动子的新方法利用类似于神经网络和遗传算法的元素组合来识别一组具有可变分离的离散子模式作为一种模式：启动子。神经网络使用一小段DNA序列窗口以及其他神经网络的输出作为输入。通过使用遗传算法，神经网络中的权重被优化，以最大限度地区分启动子和非启动子。[2]</p><p><img src="https://s2.loli.net/2022/10/22/ubSUrQVKwD7n1gd.png" alt="pr2.0.PNG"></p><p>文献介绍:<a href="10.1093/bioinformatics/15.5.356">Promoter2.0: for the recognition of PolII promoter sequences</a><u>可能打不开</u></p><p>DIO:10.1093/bioinformatics/15.5.356 <u>国内网络可用Scihub下载</u></p><h2 id="Galaxy-PhagePromoter介绍：-swig￼4"><a class="header-anchor" href="#Galaxy-PhagePromoter介绍：-swig￼4"></a>Galaxy PhagePromoter介绍： <svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-sousuo"></use></svg></h2><p>​该工具使用机器学习算法来预测在噬菌体中的启动子的位置。它能够同时识别噬菌体和细菌的启动子序列。特别的是，该工具是以galaxy为载体的网页工具。galaxy可以本地化然后针对自己的需求进行任意的改装。但是该工具使用会略微复杂，需要在get_data—upload file模块中先上传文件，然后在Phage Annotation—Phage Promoter模块中选择刚才上传的文件对数据进行预测。[3] [4]</p><p><em>注意：该工具似乎一次只可以分析一条fasta文件（python中的biopython脚本使用的是SearchIO.read而不是parse导致的），一次分析多条序列会导致错误出现。</em></p><p>文献介绍：<a href="10.1093/bioinformatics/btz580">Predicting promoters in phage genomes using PhagePromoter</a></p><p>DIO：10.1093/bioinformatics/btz580</p><div class="progress"><div class="progress-bar-animated progress-bar progress-bar-striped bg-green"  style="width: 50%" aria-valuenow="50" aria-valuemin="0" aria-valuemax="100"><p>50%</p></div></div><h2 id="Promoter2-0预测：-swig￼6"><a class="header-anchor" href="#Promoter2-0预测：-swig￼6"></a>Promoter2.0预测： <svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-sousuo"></use></svg></h2><p><em>以预测人体CD9基因为例</em></p><ul><li><p>获取序列。打开NCBI主页（<a href="http://www.ncbi.nlm.nih.gov/%EF%BC%89%EF%BC%8C%E5%9C%A8%E6%A0%B8%E9%85%B8%EF%BC%88Nucleotide%EF%BC%89%E6%95%B0%E6%8D%AE%E5%BA%93%E6%9F%A5%E8%AF%A2%E4%BA%BA%E7%B1%BBCD9%E6%8A%97%E5%8E%9F%E5%9F%BA%E5%9B%A0%EF%BC%88AY422198%EF%BC%89%EF%BC%8C%E5%B0%86%E5%85%B6%E5%BA%8F%E5%88%97%E4%BB%A5FASTA%E6%A0%BC%E5%BC%8F%E4%BF%9D%E5%AD%98%E5%88%B0%E6%9C%AC%E5%9C%B0%E8%AE%A1%E7%AE%97%E6%9C%BA%E4%B8%8A%EF%BC%8C%E4%BF%9D%E5%AD%98%E4%B8%BACD9.fasta%EF%BC%9B">http://www.ncbi.nlm.nih.gov/），在核酸（Nucleotide）数据库查询人类CD9抗原基因（AY422198），将其序列以FASTA格式保存到本地计算机上，保存为CD9.fasta；</a></p></li><li><p>进入promoter2.0网站（<a href="https://services.healthtech.dtu.dk/service.php?Promoter-2.0%EF%BC%89%EF%BC%8C%E5%AF%BC%E5%85%A5fasta%E6%96%87%E4%BB%B6%EF%BC%9B">https://services.healthtech.dtu.dk/service.php?Promoter-2.0），导入fasta文件；</a></p></li><li><p>运行等待一小会 ，查看结果<del>比Galaxy快多了</del></p></li><li><p>结果里面前面为所有导入的序列（tip：不勾选 full output 就没有），后面为预测结果。</p></li><li><p>输出格式：</p></li><li><p><img src="https://s2.loli.net/2022/10/22/vFhupGJf1E6D28U.png" alt="formate.PNG"></p></li><li><p>输出结果：</p><p><img src="https://s2.loli.net/2022/10/22/GCDR4wQKsLmp9xo.png" alt="promoter2.0.PNG"></p><h3 id="附：推荐一个生信工具聚合网站LabTools"><a class="header-anchor" href="#附：推荐一个生信工具聚合网站LabTools"></a>附：推荐一个生信工具聚合网站LabTools</h3><p>​LabTools是一个网站，用于收集我们在实验室日常工作中所需的最有用的工具。Promoter2.0可以在里面内嵌启动。网址：（<a href="http://www.labtools.us/%EF%BC%89">http://www.labtools.us/）</a></p></li></ul><h2 id="Galaxy-Galaxy-PhagePromoter预测："><a class="header-anchor" href="#Galaxy-Galaxy-PhagePromoter预测："></a>Galaxy Galaxy PhagePromoter预测：</h2><p><em>以预测大肠杆菌噬菌体T4为例</em></p><ul><li><p>在NCBI（<a href="https://www.ncbi.nlm.nih.gov/%EF%BC%89">https://www.ncbi.nlm.nih.gov/）</a> 下载Mutant Escherichia phage T4 clone T4基因（Nucleotide），保存为T4.fasta；</p></li><li><p>打开Galaxy Galaxy PhagePromoter（<a href="https://galaxy.bio.di.uminho.pt/%EF%BC%89">https://galaxy.bio.di.uminho.pt/）</a></p><psw>这个不是galaxy的官方主站，是一个基于Docker搭建的，但是我看了Galaxy主站没有Phage promoter（无奈脸</psw></li><li><p>在左边搜索Phage promoter，然后导入fasta文件，配置如图，然后运行;<em>有一说一这个Galaxy就是比EMBOSS合理有搜索栏</em></p><span class='p red'>tip：具体配置按下图，导入时注意不可多次导入同一文件，会报错。</span><p><img src="https://s2.loli.net/2022/10/22/XDNCyOqtHMQ4Fmx.png" alt="T4.PNG"></p></li><li><p>点击数据上面的刷新，等待数据从黄色变成绿色；<span class='p blue'>数据的颜色：灰色代表没有运行；黄色代表正在运行；绿色代表运行完成；红色代表运行失败</span></p></li><li><p>点击小眼睛查看数据；</p><p><img src="https://s2.loli.net/2022/10/22/U4ODcQaiqJk1KMn.png" alt="datew.PNG"></p><p><em>Galaxy服务器运行是真的卡，要等待很久，尤其是它的图形界面，如果搭建到本地应该会好点</em></p><ul><li><p>结果展示：</p><p><img src="https://s2.loli.net/2022/10/22/CFEydQRixIl3SUG.png" alt="date1.PNG"></p><p><img src="https://s2.loli.net/2022/10/22/bNtYBDloUJQaTZu.png" alt="date3.PNG"></p></li></ul></li></ul><h3 id="附：Galaxy介绍："><a class="header-anchor" href="#附：Galaxy介绍："></a>附：Galaxy介绍：</h3><p>Galaxy Project 是由 NSF, NHGRI, The Huck Institutes of the Life Sciences, The Institute for CyberScience at Penn State, and Johns Hopkins University 提供支持，其团队是宾夕法尼亚州比较基因组学和生物信息学中心、约翰·霍普金斯大学生物系以及俄勒冈州健康与科学大学的计算生物学计划的一部分，而 Galaxy 正是由这个团队开发的，并得到了社区的贡献。Galaxy Project 的第一个初始版本发布于 15 年前，也就是2005年9月16日。Galaxy 有多种可用方式，尽管大多数 Galaxy 安装都是私有的，但许多团体都以多种不同形式支持 Galaxy 实例，包括可公开访问的服务器，可以轻松地在研究和商业云，容器和虚拟机上启动的 Galaxy 实例。</p><p><img src="https://oscimg.oschina.net/oscnet/ad7bee31-fde3-4229-838e-81a10487141d.png" alt="Galaxy"></p><p><strong>Galaxy Project 是一个跨越全方位的生物医学开源项目</strong>，除了 galaxy 本身，还有 training-material，tools-iuc，planemo 等一些优秀的开源项目，这些项目都是基于 Github 平台进行开源的，所有人都可以参与并提交 PR。</p><p>Galaxy 的主站点位于 <a href="https://usegalaxy.org">https://usegalaxy.org</a>，自 2007 年以来，该网站已开放，任何人都可以免费分析其数据。该站点提供了大量的 CPU 和磁盘空间，从而可以分析大型数据集。该站点每月支持成千上万的用户和成千上万的工作。该 Galaxy 实例是在国家科学基金会（National Science Foundation）的支持下，利用了得克萨斯州高级计算中心（Texas Advanced Computing Center (TACC) ）的 CyVerse 项目慷慨提供的基础架构。</p><p>更加详细介绍：（<a href="https://www.cnblogs.com/shenweiyan/p/15648106.html%EF%BC%89">https://www.cnblogs.com/shenweiyan/p/15648106.html）</a></p><h2 id="参考资料：-swig￼11"><a class="header-anchor" href="#参考资料：-swig￼11"></a>参考资料： <svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-sousuo"></use></svg></h2><p>[1] 伊优富.启动子分析.天津医科大学生物信息学（课程）.天津：天津医科大学</p><p>[2] Knudsen S. Promoter2.0: for the recognition of PolII promoter sequences. Bioinformatics. 1999 May;15(5):356-61. doi: 10.1093/bioinformatics/15.5.356. PMID: 10366655.</p><p>[3] 分子生物学. CSDN. <a href="https://blog.csdn.net/qq_29300341/article/details/80583753">https://blog.csdn.net/qq_29300341/article/details/80583753</a></p><p>[4] Sampaio M, Rocha M, Oliveira H, Dias O. Predicting promoters in phage genomes using PhagePromoter. Bioinformatics. 2019 Dec 15;35(24):5301-5302. doi: 10.1093/bioinformatics/btz580. PMID: 31359029.</p><h2 id="所有需要用到的材料："><a class="header-anchor" href="#所有需要用到的材料："></a>所有需要用到的材料：</h2><p>奶牛快传：<a href="https://cowtransfer.com/s/f33c426aaa384c">https://cowtransfer.com/s/f33c426aaa384c</a> （下载后用电脑解压）</p><p>title: Promoter预测 # 文章名称<br>date: 2022-10-23 02:24:00 # 文章发布日期<br>updated: 2022-10-23 02:24:00# 文章更新日期<br>copyright_author: Becomingw # 作者覆写<br>copyright_url: <a href="https://bolog.becomingw.cn/2022/10/23/Promoter%E9%A2%84%E6%B5%8B/">https://bolog.becomingw.cn/2022/10/23/Promoter预测/</a> # 原文链接覆写<br>license: # 许可协议名称覆写<br>license_url: # 许可协议链接覆写</p>]]></content>
      
      
      <categories>
          
          <category> 研究生 </category>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息 </tag>
            
            <tag> Promoter </tag>
            
            <tag> Glaxy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ORF预测</title>
      <link href="/2022/10/22/ORF%E9%A2%84%E6%B5%8B%EF%BC%88%E5%9F%BA%E4%BA%8EEMBOSS%EF%BC%89/"/>
      <url>/2022/10/22/ORF%E9%A2%84%E6%B5%8B%EF%BC%88%E5%9F%BA%E4%BA%8EEMBOSS%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h1>基因序列ORF分析（基于EMBOSS）</h1><h3 id="ORF介绍-swig￼0"><a class="header-anchor" href="#ORF介绍-swig￼0"></a>ORF介绍: <svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-sousuo"></use></svg></h3><p>开放阅读框（Open Reading Frame，ORF，开放阅读框架、开放读架等）是指在给定的阅读框<br>架中，不包含终止密码子的一串序列。这段序列是生物个体的基因组中可能作为蛋白质编码序列的<br>部分，包含从 5’ 端翻译起始密码子（AUG）到终止密码子（UAA、UAG、UGA）之间的一段编码<br>蛋白质的碱基序列。由于一段 DNA 或 RNA 序列有多种不同读取方式，因此可能同时存在许多不同的开放阅读框架。</p><p>对于任何给定的核酸序列，根据密码子的起始位置，可以按照三种方式进行解释，其反向互补 序列又含有三种。因此，一条 DNA 序列可以按六种框架阅读和翻译。ORF 的识别需要检测这六个 阅读框架并决定哪一个包含以起始密码子和终止密码子为界限的 DNA 序列而其内部不包含终止密 码子，识别出蛋白质序列最长的 ORF。长的 ORF 往往不是偶然发生的，所以在任何阅读框中存在 300bp 或更长的未中断的编码序列是判断一个基因的重要依据。</p><p>一个 ORF 存在一个潜在的编码序列（Coding DNA Sequence，CDS），不同的 ORF 翻译成氨 基酸可以得到不同的蛋白质编码。一个 ORF 对应一个候选的CDS,分析 DNA 序列中的ORF是对该序列是否为CDS的初步判断，是研究DNA序列片段的方法之一。用于ORF分析的软件一般使用ORF Finder。<br>百度百科：<a href="https://baike.baidu.com/item/%E5%BC%80%E6%94%BE%E9%98%85%E8%AF%BB%E6%A1%86/4895450">ORF开放阅读框</a></p><h3 id="软件介绍-swig￼1"><a class="header-anchor" href="#软件介绍-swig￼1"></a>软件介绍: <svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-sousuo"></use></svg></h3><p>EMBOSS（European Molecular Biology Open Software Suite）软件包是一个开源的序列分析软 件包，该软件包源于 1988 年开始开发的 EGCG 系统，是一组为分子生物学家所设计的公开且免费 的软件。它整合了目前可以获得的大部分序列分析软件并有一套专门设计的 C 语言函数。该软件 包含 160 多个小型程序，能够自动识别处理以不同格式存储的数据，甚至可以通过互联网提取数 据，能很好地进行序列模体挖掘、关键词同源性数据库搜索、序列比较、进化分析、序列二级结构 分析、限制性酶切图谱分析、引物设计、序列模式识别与翻译、片段拼接等工作，可以满足一般 实验室的各种各样的序列分析要求。同时它提供了一个扩展库，以方便科学家依据自由软件精神 编制、发布软件。使用 EMBOSS，可以将系列分析工作进行无缝整合，弥补了很多其他软件功能 分散、分析效率底下的缺陷。EMBOSS 遵照 GPL 协议，打破了商业软件包发展的传统模式，使科 研工作者自由、免费的使用功能强大的分析工具。使用者可以通过三种不同的方式使用 EMBOSS 软件：第一种是通过命令行的方式；第二种是通过 X-Windows 的方式使用 EMBOSS 软件的图形界 面；第三种是联网的方式。使用者可以免费获得这些软件以及相关界面程序。EMBOSS 的主页网 址为 <a href="http://emboss.sourceforge.net">http://emboss.sourceforge.net</a>。</p><p>​    EMBOSS 软件包主要运行于 Linux 操作系统和 Mac 操作系统。现在基于 Windows 操作系统的 EMBOSS 也能自由免费使用。需要说明的是基于 Windows 操作系统时，主要采用 Staden 进入 EMBOSS，在使用时，需要安装 Embosswin 软件。Embosswin 的下载网址是：<wavy>ftp://emboss.open-bio.org/ pub/EMBOSS/wEMBOSS Explorerindows</wavy></p><p>​EMBOSS源码是完全开源的，其核心程序的基本设计与各种开发平台相兼容，可以供研究人 员作为开发应用程序的平台，不同的机构也因此开发了各种 EMBOSS 使用界面，包括 Jemboss、 Other GUIs、Web interfacaes、Workfolws、Ports and packages 等（这些几乎都是需要实打实的安装在电脑上的）。 接下来我们要用的是：</p><h4 id="EMBOSS-Explorer："><a class="header-anchor" href="#EMBOSS-Explorer："></a>EMBOSS Explorer：</h4><p>​EMBOSS Explorer 是 Web interfaces 的一种界面，利用 EMBOSS Explorer 可将 EMBOSS 软件从单机版变为网络版，可以让更多的人享用已有的分析平台。这个版本 适合安装在服务器上，提供在线分析。EMBOSS Explorer 的主界面，左边的区域是程序列表， 右边的区域是执行程序区域。</p><p><img src="https://s2.loli.net/2022/10/22/A4o8fLtZh7PM6Fc.png" alt="EMBOSS.PNG"></p><p>​正如图片所见，EMBOSS的功能非常丰富，今天我们需要用到的就两个：</p><ol><li>extractseq——用于截取一段基因片段。</li><li>getorf——用于具体片段的ORF的分析。</li></ol><h3 id="操作过程：（以大肠杆菌基因组序列的ORF分析为例）-swig￼3"><a class="header-anchor" href="#操作过程：（以大肠杆菌基因组序列的ORF分析为例）-swig￼3"></a>操作过程：（以大肠杆菌基因组序列的ORF分析为例）<svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-sousuo"></use></svg></h3><ol><li><p>获取序列。登录NCBI主页(<a href="http://www.ncbi.nlm.nih.gov/">http://www.ncbi.nlm.nih.gov/</a> )，在核酸（Nucleotide）数据库查询大肠杆菌基因组序列（U00096），将其以FASTA格式保存到本地计算机上。</p></li><li><p>打开EMBOSS。有 <a href="http://emboss.bioinformatics.nl/">http://emboss.bioinformatics.nl/</a> 和 <a href="http://genome.csdb.cn/emboss/">http://genome.csdb.cn/emboss/</a> 多个EMBOSS Explorer可供选用，任选其一打开链接即可使用。</p></li><li><p>截取序列。找到EMBOSS中的程序extractseq，在Required section项目中，通过设定Regions to extract为1-3000截取大肠杆菌基因组序列的前3000bp。点击运行后，点击outseq，然后<kbd>ctrl</kbd>+<kbd>A</kbd>选中全部，<kbd>ctrl</kbd>+<kbd>C</kbd>复制。回到桌面，新建一个TXT文件，修改后缀名为fasta。将刚刚复制的片段粘贴进去，保存名字为coli_part.fasta待用。</p><p><em>Tips：EMOBSS由于程序太多，寻找起来非常复杂，推荐直接在地址栏键入，如图：</em></p><p><img src="https://s2.loli.net/2022/10/21/R7xAydBUJaXQTjz.png" alt="dizhi.PNG"></p><div class="tip warning faa-horizontal animated faa-fast"><p>地址栏一定不能输错了，更改红色部分为程序名即可</p></div></li><li><p>ORF预测。（找到程序getorf，在序列输入框中粘贴上一步截取的前3000bp序列片段），Code to use中选择“Bacterial”，Type of output中选择“Nucleic sequences between START and STOP codons”，其他默认即可。之后点击Run getorf得到ORF的预测结果。</p><p><img src="https://s2.loli.net/2022/10/22/DwUI8u9bF32NmOK.png" alt="EMOBOSS_output.PNG"></p></li><li><p>和NCBI的ORF Finder预测结果进行比较分析。<em>tip：两个的输出结果有所不同，不代表哪一个有错，本就是一个预测，可能由于各个软件的算法以及数据存储结构不同造成结果差异</em></p><h4 id="附1：ORF-Finder预测："><a class="header-anchor" href="#附1：ORF-Finder预测："></a>附1：ORF Finder预测：</h4><p>ORF Finder在您输入的 DNA 序列中搜索ORF。该程序返回每个ORF的范围及其蛋白质翻译。使用 ORF 查找器搜索新测序的 DNA 以查找潜在的蛋白质编码片段，使用新开发的 SMART BLAST 或常规 BLASTP 验证预测的蛋白质。地址：<a href="https://www.ncbi.nlm.nih.gov/orffinder/">https://www.ncbi.nlm.nih.gov/orffinder/</a></p><p>tips：ORF Finder所给到的信息更多，但是ORF Finder不支持直接文件导入。ORF Finder最大支持50kb基因长度，<span class='p red'>大肠杆菌长度约4 70kb，不能直接全复制进去，需要手动处理or用EMBOSS的extractseq剪切</span>，长了会报错，如图</p><p><img src="https://s2.loli.net/2022/10/22/ayEBpj2ebTolQuq.png" alt="erro.PNG"></p><p>将前面保存的coli_part.fasta里面的全复制进去，运行后，我的结果如下;</p><p><img src="https://s2.loli.net/2022/10/22/aMtylmhXrFReSw1.png" alt="finder_output.PNG"></p><p>​ORF Finder教程：<a href="https://zhuanlan.zhihu.com/p/465101247">https://zhuanlan.zhihu.com/p/465101247</a></p><h4 id="附2：NCBI数据库下载基因组序列："><a class="header-anchor" href="#附2：NCBI数据库下载基因组序列："></a>附2：NCBI数据库下载基因组序列：</h4></li></ol><ul><li><p>打开NCBI（<a href="http://www.ncbi.nlm.nih.gov/">http://www.ncbi.nlm.nih.gov/</a>)；</p></li><li><p>选择搜索栏左边选项选择你想要的数据库类型，这里以Nucleotide库为例.</p></li><li><p>选择send，保存为file，选择fasta格式。</p></li></ul><p><img src="https://s2.loli.net/2022/10/22/ZJMEnXapoUHgI3C.png" alt="send.PNG"></p><ul><li>选择保存位置，默认命名为sequence.fasta。由于NCBI服务器在国外，下载速度比较慢，在下载完整sequence时会有比较明显的感知。（下载速度只有10-30kb/s)</li></ul><p><img src="https://s2.loli.net/2022/10/22/IKSR8yFL9znp2Pe.png" alt="download.PNG"></p><p>NCBI数据库使用方法教程：<a href="https://www.51xxziyuan.com/55/5943.html">https://www.51xxziyuan.com/55/5943.html</a> <wavy>他说他是最详细的教程</wavy></p><h6 id="引用及参考："><a class="header-anchor" href="#引用及参考："></a>引用及参考：</h6><p>1.《生物信息学》（李霞，人民卫生出版社），</p><p>2.天津医科大学《生物信息学基础》课程，伊现富博士</p><p>3.NCBI，百度百科</p><p>4.大肠杆菌，百度百科</p><hr><h2 id="title-ORF预测-文章名称date-2022-10-22-18-33-00-文章发布日期updated-2022-10-22-18-33-00-文章更新日期copyright-author-Becomingw-作者覆写copyright-url-https-bolog-becomingw-cn-2022-10-22-ORF预测（基于EMBOSS）-原文链接覆写license-许可协议名称覆写license-url-许可协议链接覆写"><a class="header-anchor" href="#title-ORF预测-文章名称date-2022-10-22-18-33-00-文章发布日期updated-2022-10-22-18-33-00-文章更新日期copyright-author-Becomingw-作者覆写copyright-url-https-bolog-becomingw-cn-2022-10-22-ORF预测（基于EMBOSS）-原文链接覆写license-许可协议名称覆写license-url-许可协议链接覆写"></a>title: ORF预测 # 文章名称<br>date: 2022-10-22 18:33:00 # 文章发布日期<br>updated: 2022-10-22 18:33:00# 文章更新日期<br>copyright_author: Becomingw # 作者覆写<br>copyright_url: <a href="https://bolog.becomingw.cn/2022/10/22/ORF%E9%A2%84%E6%B5%8B%EF%BC%88%E5%9F%BA%E4%BA%8EEMBOSS%EF%BC%89/">https://bolog.becomingw.cn/2022/10/22/ORF预测（基于EMBOSS）/</a> # 原文链接覆写<br>license: # 许可协议名称覆写<br>license_url: # 许可协议链接覆写</h2>]]></content>
      
      
      <categories>
          
          <category> 研究生 </category>
          
          <category> 生物信息学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 生物信息 </tag>
            
            <tag> ORF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CRISPR/Cas9基因工程</title>
      <link href="/2022/09/20/CRISPR%20%E4%B8%8ECas9%E7%AE%80%E4%BB%8B/"/>
      <url>/2022/09/20/CRISPR%20%E4%B8%8ECas9%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h4 id="什么是CPISPR和Cas？"><a class="header-anchor" href="#什么是CPISPR和Cas？"></a>什么是CPISPR和Cas？</h4><p>  CRISPR的全称是clustered regularly interspaced short palindromic repeats，就是“成簇规律性间隔短回文重复序列”，你将很快知道它的含义；Cas是一个蛋白质大家族。在生物学里，所谓的蛋白质“家族”，可以简单地理解为彼此之间结构甚至功能比较相似的很多种蛋白质组成的集合。</p><hr><h4 id="CPISPR历史"><a class="header-anchor" href="#CPISPR历史"></a>CPISPR历史</h4><p>  1987年，石野良纯(Ishino Yoshizumi)等人在研究大肠杆菌的一个基因(iap)时，无意间发现了一段紧接着这个基因的“无法确定功能”的DNA（如图所示）。研究者注意到这段DNA同时具有如下特征，同时具有所有这些特征的DNA是以前的研究中从未发现的：<br><img src="../img/novel/%E5%BA%8F%E5%88%97%E5%9B%BE.jpg" alt=""><br>  1 这段DNA中的一些小片段具有几乎相同的碱基排列方式（其中一条链是CGGTTTA<strong>TCCCCGC</strong>TRR<strong>CGCGGGGA</strong>ACTC）。但它们并不首尾相接，而是被另外一些排列方式多变的DNA隔开，就好像是准备好很多条相同的小段，然后把它们均匀地插入了一段杂乱排列的DNA一样。这些序列称为重复序列(repeat)，而把它们隔开的杂乱排列的DNA称为间隔序列(spacer)。（如果去掉repeat中间的spacer，其模型就是生化中的回文序列。）<br>  2 一段重复序列有29个碱基，而将它们隔开的间隔序列虽然杂乱多变，但每一段一定有32个碱基。<br>  3 一段重复序列中有部分片段是反向互补的。比如在上图中， TCCCCGC和GCGGGGA，写出前者的反向排列（即CGCCCCT），发现它可以与GCGGGGA恰好互补，反之亦然。<br>  这种DNA并没有立即得名，或者说只是因为类似的结构在很多细菌中被发现，而随便取了几个名字(如DR:direct repeat；TREP:tandem repeat；SRSR:short regularly spaced repeats)。然而，1989年，中田敦夫(Atsuo Nakata)、牧野公三(マキノ 公三，Kozo Makino)等人在另外两种品系的大肠杆菌，以及另外两种细菌——痢疾志贺氏菌(Shigella dysenteriae)、肠志贺氏菌(S. enterica)中再次发现了相同特征的DNA片段；1991年，彼得·赫曼斯(Peter W.M.Hermans)等人在结核分歧杆菌(Mycobacterium tuberculosis)等放线菌门(phylum Actinobacteria)成员中又发现了此类DNA；1993年，这样的DNA首次发现在古细菌——地中海嗜盐菌(Haloferax mediterranei)中。随着时间推移，科学家在越来越多的原核物种中发现了这样的DNA。到2000年，科学家确定这种序列在40%左右的真细菌和90%左右的古细菌中的存在。而且还发现在不同的细菌中，乃至在同一种细菌的不同CRISPR中，人们发现重复序列和间隔序列的排列方式、重复序列重复出现的次数都可以表现出很大差异。<br>在此补充一个知识点：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">真细菌界与古细菌界：把真细菌等同于真菌是一个误区。20世纪最伟大的生物学家之一——Carl Woese就细菌中发现的两类已涉及到根本性的差别——如转录因子、rRNA、tRNA的类别差异——的类群提出，应该将细菌进一步分为真细菌(Eubactria)界和古细菌(Archeobacteria或者Archaea)界。古细菌经常生活在一些极端环境，如高温、高盐的环境中。</span><br></pre></td></tr></table></figure><p>  2002年，吕德·詹森(Ruud Jansen)将具有以上特征的DNA片段重新命名为CRISPR。也就是说，CRISPR，也即<strong>clustered regularly interspaced short palindromic repeats——“成簇规律性间隔短回文重复序列”</strong>，是DNA。在这个时候，科学家们仍然不知道它的作用是什么。<br>  与此同时，随着测序技术的发展，科学家逐渐获得了更多细菌的基因组数据。通过比较大批细菌的基因文库，人们发现了总位于CRISPR附近的一些基因，在不同的菌种之间普遍相似。科学家最初鉴定出了4种这样的基因。这些基因被詹森命名为CRISPR-associated sequence（中文翻译：与CRISPR有关系的序列）即Cas。这4种基因分别称为Cas1-4。詹森指出：<em>在大多数含有这4种基因的细菌中，人们发现它们在基因组中的排列顺序是Cas3-Cas4-Cas1-Cas2，CRISPR则位于这个“基因簇”的某一侧</em>。此外，对于掘越氏热球菌(Pyrococcus horikoshii)、多杀性巴氏杆菌(Pasteurella multocida)、酿脓链球菌(Streptococcus pyogenes)等含有两个或多个CRISPR的细菌来说，在相同的细菌中，不同的CRISPR可能伴随有排列方式不同的Cas基因簇。同时，在2002年的同一篇论文里，詹森还指出，Cas1和Cas2蛋白的功能无法确定，而Cas3具有解旋酶的活性；Cas4的功能则似乎与核酸外切酶相似。<br>  2005年，弗朗西斯科·莫吉卡(Francisco J.M.Mojica)和克里斯汀·波塞尔(Christine Pourcel)分别独立发现间隔序列的碱基排列方式与一些噬菌体或质粒的DNA片段几乎完全相同，引发了“CRISPR与抵抗外来因子有关”的猜测，他们的研究指出，如果细菌CRIPR中有与它们的某段DNA相同的序列，则该噬菌体无法侵染该细菌。<br>  除了猜测CRISPR的抵抗作用以外，他们也同时认为一定存在某种机制能够使CRISPR将入侵的DNA的关键信息记录下来。同年，亚历山大·波罗金(Alexander Bolotin)同时发现记录的噬菌体的信息越多，对噬菌体的抵抗能力就越强。已经可以说是有大量研究表明，CRISPR/Cas的存在跟细菌的获得性免疫有关。但是这些研究仍然没有引起广泛重视。2006年，基拉·马卡洛娃(Kira S.Makarova)提出并强调Cas蛋白其实是细菌获得性免疫的效应物，并提出：CRISPR/Cas“与脊椎动物的获得性免疫极为相似”。接下来一个实验更加证实了前面的猜想。2007年，鲁道夫·巴兰戈(Rodolphe Barrangou)用嗜热链球菌做了一系列实验：在它的CRISPR的间隔序列中插入一些某种噬菌体的DNA，结果发现嗜热链球菌对这种噬菌体产生抵抗性；删除噬菌体基因组中，排列方式与细菌的间隔序列相同的DNA，结果发现细菌对该噬菌体失去免疫能力.<br>  他们还发现CRISPR也能干扰质粒的转移。次年，约翰·范德奥斯特(John van der Oost)又证实了，CRISPR可以转录出一些特殊的RNA，这些RNA与Cas蛋白质结合成“核酸-蛋白复合体”，以此来发挥功能。实验证据和观测证据在这段时间里越来越多。最终，人们从而确切地知道了CRISPR/Cas系统。<br>  细菌利用CRISPR/Cas来抵抗入侵者的大致机制就是：<strong>获取了入侵的噬菌体的遗传信息后，将其作为间隔序列整合进CRISPR结构，在噬菌体下次入侵时，其转录产物便能将Cas基因表达出的核酸酶定位到对应的入侵者的DNA上，核酸酶便将目标降解。</strong></p><h4 id="“细菌获得性免疫”的过程："><a class="header-anchor" href="#“细菌获得性免疫”的过程："></a>“细菌获得性免疫”的过程：</h4><p>  在噬菌体的DNA还是完整的的时候，未来将会被整合进CRISPR的部分称作原间隔序列(protospacer)。在紧接着原间隔序列的地方，人们发现了一个似乎被细菌当作噬菌体入侵的信号的短DNA片段，称之为“原间隔序列毗邻基序”(protospacer-adjacent motif,PAM)，后者大概只有2-8个碱基。Cas在识别PAM，从而发现原间隔序列后即将其切割成小段，留下前体间隔序列(precursor spacer)，并整合为CRISPR。这表明原间隔序列的选取不是随机的。每插入一个间隔序列，就要产生一个新的重复序列。通常观察到的这个操作方法是每将一段间隔序列接在原来CRISPR的末端，就复制前面一个重复序列，将新产生的重复序列与之拼接，这样一直延长；后来人们还发现另外一种插入方式，即间隔序列直接插入原来CRISPR的内部。具体如图示<br><img src="../img/novel/%E5%85%8D%E7%96%AB%E8%AF%86%E5%88%AB.jpg" alt=""><br>  当噬菌体再次入侵时， CRISPR区域转录出两种RNA分子：pre-crRNA（即crRNA的前体，就像pre-mRNA【hnRNA】一样，crRNA为CRISPR转录的最终产物），这是根据CRISPR的一条链上所有的脱氧核苷酸转录而来的；tracrRNA（反式作用crRNA，trans-acting crRNA），是根据CRISPR中另一条链上的所有重复序列转录而来的，它具有发卡状（或者棒棒糖状）结构。tracrRNA具有没有形成棒棒糖结构的部分，可以与pre-crRNA对应的部分形成互补双链（因为tracrRNA与pre-crRNA分别转录于CRISPR的两条DNA链）。由于CRISPR中掺杂的是好几种入侵者的遗传信息，而细菌只需要其中一种，所以在pre-crRNA和tracrRNA与Cas9结合后，再经过一种RNA酶——RNase III和Cas9本身的共同作用后，便可形成多种成熟的crRNA-Cas9。Cas9蛋白、crRNA与tracrRNA共同结合成为了细菌对抗入侵者的“军火”。<br>  Cas9蛋白具有识别、解旋、剪切的功能，这些功能仰赖了Cas9蛋白中不同的结构域。Cas9蛋白由两个“叶”(lobe)组成，大致分别具有识别和核酸酶的功能，故分别叫作REC叶和NUC叶；有几个关键的结构域：RuvC和HNH结构域发挥核酸内切酶的功能（即“剪刀”）；REC1和REC2结构域的功能是识别与结合，将Cas9蛋白锚定在目标DNA上并沿线移动；PI即PAM interacting，能识别并定位到PAM序列。<br>  这个三聚体随后扫描外源DNA并沿着它滑动，直到crRNA中间隔序列的部分互补到原间隔序列，并且Cas9蛋白的PI结构域识别PAM——从而定位到此处，并从此处将外源DNA切开，制造出一个双链断裂(double-strand breaks,DSB)，即可让外源DNA无法表达。<br><img src="../img/novel/%E8%87%AA%E7%84%B6cas%E7%BB%93%E6%9E%84.jpg" alt=""><br>自此，“细菌的获得免疫“过程基本结束。然后谈一下CRISPR/Cas9是怎样用于基因编辑的。</p><hr><p>####CPISPR用于基因工程<br>为了简化操作过程，研究人员将tracrRNA-crRNA改装成了一个单股向导RNA(single guide RNA，gRNA)，它与Cas9结合并靶向DNA的分子结构如图所示。sgRNA-Cas9进入细胞核并识别PAM序列和靶序列后，在其后方3个碱基的地方切断DNA，并产生平末端切口。（为便于对比，再放上自然细菌的CRISPR/Cas9系统图示）<br><img src="../img/novel/grna%E6%A8%A1%E5%BC%8F.jpg" alt=""><br><img src="../img/novel/%E8%87%AA%E7%84%B6cas%E7%BB%93%E6%9E%84.jpg" alt=""><br>在真核细胞中，对于断裂的DNA，它们拥有两种DNA修复方式——同源重组修复(homologous recombination,HR)和非同源末端连接(non-homologous end joining,NHEJ)。利用同源重组修复，细胞通常会以某一模板链（通常是另一条同源染色体）对缺损的另一条链进行修复（如图）【这也是基因工程中所用的】。而利用非同源末端连接，细胞亦会先制造黏性末端，但在之后会直接将断口接起来。对于科学家们来说：<strong>一方面，如果利用非同源末端连接，我们就可以删除片段或者敲低基因</strong>（断裂部分随机大概率以无用序列填充）【这也是突变的一种，可能随机填充的序列恰好具有某种功能】；<strong>如果人工构造同源重组修复的模板，我们就可以实现基因的敲入、修改、融合等。只要我们构建好了CRISPR/Cas9工具的诸零件载体，将其送入细胞核，就能按照我们的需要编辑基因了，这张图就展现了一种典型的CRISPR/Cas9基因编辑的操作方法</strong>。为了将编辑工具顺利转入细胞核，科学家探索出了在载体上插入核定位信号，以及电穿孔和利用病毒整合的方法。</p><h3 id="加个视频便于理解："><a class="header-anchor" href="#加个视频便于理解："></a>加个视频便于理解：</h3> <style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-HpwXiUtmFzGnTOFi" src="https://player.bilibili.com/player.html?bvid=BV1Ts411p7NN&page=1&high_quality=1&danmaku=true" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-HpwXiUtmFzGnTOFi").style.height=document.getElementById("mmedia-HpwXiUtmFzGnTOFi").scrollWidth*0.76+"px";    window.onresize = function(){      document.getElementById("mmedia-HpwXiUtmFzGnTOFi").style.height=document.getElementById("mmedia-HpwXiUtmFzGnTOFi").scrollWidth*0.76+"px";    }; </script><hr><h2 id="title-CRISPR-Cas9基因工程-文章名称date-2022-09-20-18-33-00-文章发布日期updated-2022-10-23-22-52-46-文章更新日期copyright-author-Becomingw-作者覆写copyright-url-https-bolog-becomingw-cn-2022-09-20-CRISPR-与Cas9简介-原文链接覆写license-许可协议名称覆写license-url-许可协议链接覆写"><a class="header-anchor" href="#title-CRISPR-Cas9基因工程-文章名称date-2022-09-20-18-33-00-文章发布日期updated-2022-10-23-22-52-46-文章更新日期copyright-author-Becomingw-作者覆写copyright-url-https-bolog-becomingw-cn-2022-09-20-CRISPR-与Cas9简介-原文链接覆写license-许可协议名称覆写license-url-许可协议链接覆写"></a>title: CRISPR/Cas9基因工程 # 文章名称<br>date: 2022-09-20 18:33:00 # 文章发布日期<br>updated: 2022-10-23 22:52:46 # 文章更新日期<br>copyright_author: Becomingw # 作者覆写<br>copyright_url: <a href="https://bolog.becomingw.cn/2022/09/20/CRISPR%20%E4%B8%8ECas9%E7%AE%80%E4%BB%8B/">https://bolog.becomingw.cn/2022/09/20/CRISPR 与Cas9简介/</a> # 原文链接覆写<br>license: # 许可协议名称覆写<br>license_url: # 许可协议链接覆写</h2>]]></content>
      
      
      <categories>
          
          <category> 研究生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基因工程 </tag>
            
            <tag> CRISPR </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>欢迎访问</title>
      <link href="/2022/09/09/hello-world/"/>
      <url>/2022/09/09/hello-world/</url>
      
        <content type="html"><![CDATA[<div id='SF' class='carousel'><div id="SF-drag-container" class="drag-container"><div id="SF-spin-container" class="spin-container"><img src="https://s2.loli.net/2022/10/22/FanDG179YRU6QCj.jpg" alt=""><br><img src="https://s2.loli.net/2022/10/22/poX95O4takz6uiP.jpg" alt=""><br><img src="https://s2.loli.net/2022/10/22/VSzIULFJ8BmkRgp.jpg" alt=""><br><img src="https://s2.loli.net/2022/10/22/bUlqs3ETDpBH4eO.jpg" alt=""><br><img src="https://s2.loli.net/2022/10/22/SWYucQ5dFC7rlno.jpg" alt=""><br><img src="https://s2.loli.net/2022/10/20/Vi9tlroBDAcpmka.jpg" alt=""><br><img src="https://s2.loli.net/2022/10/20/lYibUoDhQZIKtW5.jpg" alt=""><p>strike freedom</p></div><div id="SF-carousel-ground" class="carousel-ground"></div></div></div><script type="text/javascript">carouselinit('SF');</script><h1>基于hexo，部署于github，vercel加速</h1><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a class="header-anchor" href="#Quick-Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a class="header-anchor" href="#Create-a-new-post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a class="header-anchor" href="#Run-server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a class="header-anchor" href="#Generate-static-files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a class="header-anchor" href="#Deploy-to-remote-sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>推荐一个磁共振视频</title>
      <link href="/2022/01/17/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E8%AE%B2%E7%A3%81%E5%85%B1%E6%8C%AF%E7%9A%84%E8%A7%86%E9%A2%91/"/>
      <url>/2022/01/17/%E6%8E%A8%E8%8D%90%E4%B8%80%E4%B8%AA%E8%AE%B2%E7%A3%81%E5%85%B1%E6%8C%AF%E7%9A%84%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<h3 id="推荐b站up主老奇好奇关于磁共振原理的视频："><a class="header-anchor" href="#推荐b站up主老奇好奇关于磁共振原理的视频："></a>推荐b站up主<a href="https://b23.tv/8kwkL4i">老奇好奇</a>关于磁共振原理的视频：</h3> <style>.bbplayer{width: 100%; max-width: 850px; margin: auto}</style><div class="bbplayer"><iframe class="bbplayer" id="mmedia-haBCuevwUxSWpIUe" src="https://player.bilibili.com/player.html?bvid=BV1di4y1y7au&page=1&high_quality=1&danmaku=true" allowfullscreen="allowfullscreen" scrolling="no" border="0" frameborder="0" framespacing="0" sandbox="allow-top-navigation allow-same-origin allow-forms allow-scripts allow-popups"></iframe></div><script> document.getElementById("mmedia-haBCuevwUxSWpIUe").style.height=document.getElementById("mmedia-haBCuevwUxSWpIUe").scrollWidth*0.76+"px";    window.onresize = function(){      document.getElementById("mmedia-haBCuevwUxSWpIUe").style.height=document.getElementById("mmedia-haBCuevwUxSWpIUe").scrollWidth*0.76+"px";    }; </script><p><strong>如果上面视频无法播放请点击</strong>：<a href="https://www.bilibili.com/video/BV1di4y1y7au?share_source=copy_web&amp;vd_source=f8f46b4aefc15d5d7102ae4f0742341d">源视频</a></p>]]></content>
      
      
      <categories>
          
          <category> 影像技术 </category>
          
          <category> 磁共振 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 磁共振原理 </tag>
            
            <tag> 医学影像技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>政治经济学</title>
      <link href="/2021/11/17/%E6%94%BF%E6%B2%BB%E7%BB%8F%E6%B5%8E%E5%AD%A6/"/>
      <url>/2021/11/17/%E6%94%BF%E6%B2%BB%E7%BB%8F%E6%B5%8E%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<h2 id="资本1-0（简单商品经济时期）"><a class="header-anchor" href="#资本1-0（简单商品经济时期）"></a>资本1.0（简单商品经济时期）</h2><p>一般商品经济（在资本出现之前），4个对子，1个规律</p><p>商品一定是劳动产品</p><h4 id="一、使用价值与价值关系："><a class="header-anchor" href="#一、使用价值与价值关系："></a>一、使用价值与价值关系：</h4><p>使用价值——具体劳动——自然关系</p><p>价值——抽象劳动——社会关系</p><p>对立统一：对人来说，使用价值与价值不能兼得；</p><p>对商品来说，价值寓于使用价值，具有统一性。</p><p>辨析：有价值一定有使用价值，但有使用价值不一定有价值（如‘空气‘）。</p><h4 id="二、具体劳动与抽象劳动（注意词的一一对应）"><a class="header-anchor" href="#二、具体劳动与抽象劳动（注意词的一一对应）"></a>二、具体劳动与抽象劳动（注意词的一一对应）</h4><p>具体劳动生产使用价值，具有自然属性；</p><p>抽象劳动生产价值，具有社会属性</p><p>劳动二重性决定商品二因素</p><h4 id="三、货币于商品："><a class="header-anchor" href="#三、货币于商品："></a>三、货币于商品：</h4><p>关于货币：1.本质为一般等价物</p><p>2.本身具有价值</p><p>3.货币天然是金银，但金银不一定是货币。</p><p>货币世界后的商品经济两极：</p><p>商品：只表现使用价值——货币：只表现价值</p><p><strong>货币的出现确实有利于交换，但并没有解决矛盾</strong>。</p><h4 id="四、私人劳动与社会劳动：——是商品经济时期最根本的矛盾，单选出现必选它"><a class="header-anchor" href="#四、私人劳动与社会劳动：——是商品经济时期最根本的矛盾，单选出现必选它"></a>四、私人劳动与社会劳动：——是商品经济时期最根本的矛盾，单选出现必选它</h4><p>私人劳动：生产资料私有决定——社会劳动：是社会总劳动的一部分</p><p>通过交换解决矛盾（注：矛盾只能解决，而且解决的是方式，矛盾不能调和）。</p><p>商品无法交换则矛盾无法解决。——商品劳动者的劳动具有两重性（私人与社会），私人劳动必须通过交换转化为社会劳动。</p><h4 id="五、价值规律"><a class="header-anchor" href="#五、价值规律"></a>五、价值规律</h4><p>自发的、盲目的、滞后的</p><p>（自发不需人参与，常为自然规律；自觉有人参与，常为历史规律）</p><p>商品经济的基本规律（只要是存在商品经济就有，不管是1.0还是2.0）</p><p>支配商品生产、流通</p><p>辩证看待好坏，双刃剑。</p><h4 id="六、货币职能（有5个，但通常只考3个）"><a class="header-anchor" href="#六、货币职能（有5个，但通常只考3个）"></a>六、货币职能（有5个，但通常只考3个）</h4><p>1.作为价值尺度——商品标价（观念货币）</p><p>2.流通手段——即时支付（只要没有提到提前，延后的支付）</p><p>3.支付手段——赊账，提前or延后支付</p><p>4.世界货币</p><p>5.贮藏手段</p><p>##资本2.0（资本主义经济时期）</p><h4 id="笔记一、资本主义"><a class="header-anchor" href="#笔记一、资本主义"></a>笔记一、资本主义</h4><p>“劳”=物质生产的过程（使用价值）</p><p>“价”=工人的生产过程（价值）</p><h4 id="笔记二、工人全部劳动-必要劳动-剩余劳动"><a class="header-anchor" href="#笔记二、工人全部劳动-必要劳动-剩余劳动"></a>笔记二、工人全部劳动=必要劳动+剩余劳动</h4><p>必要劳动：不体现剥削，形成劳动力价值（以工资形式返还给工人，工资本质是劳动力价值或价格）</p><p>剩余劳动：体现剥削，形成剩余价值（资本家无偿占有）</p><p>注：劳动力价值=工资+剩余价值说法错误</p><p>劳动力价值=工资=劳动力价值=必要劳动创造的价值</p><h4 id="笔记三、资本-可变资本-不变资本"><a class="header-anchor" href="#笔记三、资本-可变资本-不变资本"></a>笔记三、资本=可变资本+不变资本</h4><p>可变资本：购买的劳动力的资本——会增值，不转移到新产品中，以抽象劳动再创造。</p><p>不变资本：生产资料存在的资本——不会增值，原价值通过工人具体劳动转移到新产品。</p><p>注：转移——损耗——物的价值</p><p>创造——工人价值</p><p>以下说法错误：</p><p>剩余价值由工人和资本家共同创造❌</p><p>工人（劳动力）是剩余价值的一部分❌</p><p><strong>笔记三总结</strong>：<br>物的价值要转移；</p><p>人的价值要创造；</p><p>具体劳动锁定物；</p><p>抽象劳动对应人。</p><h4 id="笔记四、资本分类"><a class="header-anchor" href="#笔记四、资本分类"></a>笔记四、资本分类</h4><p>固定与流动资本：根据资本周转方式</p><p>货币资本、商品资本、生产资本：根据资本循环方式</p><h4 id="笔记五、生产与消费"><a class="header-anchor" href="#笔记五、生产与消费"></a>笔记五、生产与消费</h4><p>#####一、资本主义生产分类：</p><p>1.物质简单再生产——物质资料再生产（对应物的生产）和资本主义生产关系的再生产（对应人的生产）</p><p>2.扩大再生产</p><p><em>资本主义的生产是连续不断进行的，非断续的</em></p><p>#####二、价值补偿：卖的出去</p><p>实物补偿：买得到</p><p>#####三、经济危机</p><p>资本主义生产在价值规律下进行，所以生产常常过剩——经济危机<br>资本主义经济危机总会爆发（危机不可避免，具有周期性），（危机、萧条、复苏、高涨）<br>经济危机：强制性解决资本主义基本矛盾的方式，以资源浪费为代价，并且并非根本解决<br>经济危机的根本原因：资本主义基本矛盾（最根本）、形式可能、货币作为流通和支付手段<br>经济危机爆发根本原因具体表现：<br>生产无限扩大的趋势与劳动人民支付能力的需求相对缩小的矛盾（生产与消费）<br>单个企业内部生产的有组织性和整个社会生产的无政府状态之间的矛盾（私人与社会）<br>经济危机的本质特征——生产相对过剩<br>资本主义基本矛盾：生产社会化——资本私人占有<br>社会经济要顺利运行：<br>社会生产要实现生产与消费的动态平衡（生产与消费）<br>社会总产品要实现价值补偿与实物补偿（价值与实物补偿）</p><h4 id="笔记六、剩余价值的剥削方式"><a class="header-anchor" href="#笔记六、剩余价值的剥削方式"></a>笔记六、剩余价值的剥削方式</h4><p>绝对剩余价值：延长总劳动的时间，以直接延长剩余劳动时间（加班等）</p><p>相对剩余价值：总劳动时间不变，缩短必要劳动时间，从而间接相对延长剩余劳动时间（改进技术等）</p><p>@超额剩余价值：提高个别企业，个别的劳动生产率，结果是出现相对剩余价值</p><p>追求超额剩余价值是相对剩余价值的目的；</p><p>相对剩余价值是超额的结果。</p><h4 id="笔记七、资本积累"><a class="header-anchor" href="#笔记七、资本积累"></a>笔记七、资本积累</h4><p>资本价值构成：仅仅是价格涨跌（生产原材料因供求关系涨价，人工费因供求涨价等），技术没有发生任何变化。</p><p>资本有机构成=不变资本：可变资本=C：V</p><p>——随着资本进行，资本有机构成不断提高（C上涨，V下跌），资本不断增殖需要获得更多的剩余价值&gt;&gt;&gt;技术进步，不断延长剩余劳动时间（主要是相对劳动时间）&gt;&gt;&gt;所需劳动需求减少&gt;&gt;&gt;相对过剩人口（失业会有，但资本会对其有一定的控制）</p><p>剩余价值是资本积累的源泉，资本积累是资本主义扩大再生产的源泉</p>]]></content>
      
      
      <categories>
          
          <category> 考研相关 </category>
          
          <category> 政治 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 考研 </tag>
            
            <tag> 考研笔记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
